What happens when you initialize a repository? Why do you need to do it?
when you initialize a repository(done using the command git init),it tells
git to creat a repository in a particular directory.


How is the staging area different from the working directory and the repository?
What value do you think it offers?

-a staging area provides a temporary area to place your files that 
should be part of a single commit.
it offers a value of being able to make the correct choice to 
when choosing what to comit and what not to.

How can you use the staging area to make sure you have one commit per logical
change?
- a staging area can take a file or group of files that have got changes.
a staging area allows the user to commit this changes singly as per logical change,
such that they can be tracked back,commit by commit.
-this is contrary to being without,where every change would be effected at the same time. 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
-branching helps to keep different versions of a file,if say one or more of the versions are being tracked 
but changes on the original are maintained,and those from the branch do not interfere.

How do the diagrams help you visualize the branch structure?
-it helps gain an understanding of branching,and what exactly happens,the way branches and commits are relate to others.
-

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
_the two branches combine to become one updated version with changes from both files/branches.
-its represented that way in the diagram to show the result of the merging(the two files/branches                                                           combining to one updated version.) of the two branches.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?